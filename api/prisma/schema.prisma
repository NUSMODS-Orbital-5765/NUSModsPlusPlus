// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

generator dbml {
  provider = "prisma-dbml-generator"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String
  role          String
  NUSId         String    @unique
  username      String    @unique
  password      String
  email         String    @unique
  faculty       String
  academicPlan  String?
  primaryDegree String?
  secondDegree  String?
  secondMajor   String?
  programme     String?
  minor         String[]
  interests     String[]
  avatar        String?
  Post          Post[]    @relation("createdPost")
  Comment       Comment[]
  Event         Event[]
}

model Post {
  id           Int       @id @default(autoincrement())
  title        String
  dateCreated  DateTime
  relatedMajor String?
  category     String
  content      String
  upload_file  String[]
  tags         String[]
  author       User      @relation("createdPost", fields: [PostAuthorId], references: [id])
  PostAuthorId Int
  like         String[]
  Comment      Comment[]
}

model Comment {
  id          Int      @id @default(autoincrement())
  dateCreated DateTime
  author      User     @relation(fields: [authorId], references: [id])
  content     String
  post        Post[]
  authorId    Int
}

model Programme {
  id                  Int               @id @default(autoincrement())
  name                String
  combination         String[]
  commonModule        CommonModuleGroup @relation(fields: [commonModuleGroupId], references: [id])
  coreModule          CoreModuleGroup[]
  commonModuleGroupId Int
}

model CoreModuleGroup {
  id        Int         @id @default(autoincrement())
  name      String
  faculty   String?
  rules     Json
  programme Programme[]
}

model CommonModuleGroup {
  id        Int         @id @default(autoincrement())
  name      String
  faculty   String
  rules     Json
  Programme Programme[]
}

model Module {
  id                  Int      @id @default(autoincrement())
  acadYear            String
  preclusion          String?
  description         String
  title               String
  department          String
  faculty             String
  workload            String?
  attributes          Json?
  prerequisite        String?
  moduleCredit        String
  moduleCode          String
  prereqTree          Json?
  aliases             String[]
  corequisite         String?
  fulfillRequirements String[]
}

model Event {
  id       Int    @id @default(autoincrement())
  name     String
  date     String
  time     String
  category String
  priority Int
  user     User   @relation(fields: [userId], references: [id])
  userId   Int
}
